AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: Ahura Restaurant Reservation Backend

Parameters:
  Environment:
    Type: String
    Default: dev
    AllowedValues:
      - dev
      - prod
    Description: Environment name

Resources:
  # API Gateway
  ResyAPI:
    Type: AWS::Serverless::Api
    Properties:
      StageName: !Ref Environment
      Cors:
        AllowMethods: "'GET,POST,OPTIONS'"
        AllowHeaders: "'*'"
        AllowOrigin: "'*'"

  # Lambda Function
  ResyFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: lambda/resy-api
      Handler: index.handler
      Runtime: nodejs16.x
      Timeout: 30
      MemorySize: 256
      Environment:
        Variables:
          RESY_API_KEY: !Sub '{{resolve:secretsmanager:${ResyAPICredentials}:SecretString:apiKey}}'
          REGION: !Ref AWS::Region
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref ReservationsTable
        - Statement:
            - Effect: Allow
              Action:
                - secretsmanager:GetSecretValue
                - secretsmanager:PutSecretValue
                - secretsmanager:UpdateSecret
              Resource: !Ref ResyAPICredentials
      Events:
        GetReservations:
          Type: Api
          Properties:
            RestApiId: !Ref ResyAPI
            Path: /reservations
            Method: GET
        GetPastReservations:
          Type: Api
          Properties:
            RestApiId: !Ref ResyAPI
            Path: /reservations/past
            Method: GET
        GetUpcomingReservations:
          Type: Api
          Properties:
            RestApiId: !Ref ResyAPI
            Path: /reservations/upcoming
            Method: GET

  # DynamoDB Table
  ReservationsTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: !Sub 'Reservations-${Environment}'
      BillingMode: PAY_PER_REQUEST
      AttributeDefinitions:
        - AttributeName: id
          AttributeType: S
        - AttributeName: userId
          AttributeType: S
      KeySchema:
        - AttributeName: id
          KeyType: HASH
      GlobalSecondaryIndexes:
        - IndexName: UserReservations
          KeySchema:
            - AttributeName: userId
              KeyType: HASH
          Projection:
            ProjectionType: ALL

  # Secrets Manager for Resy API Credentials
  ResyAPICredentials:
    Type: AWS::SecretsManager::Secret
    Properties:
      Name: !Sub 'resy/api-credentials-${Environment}'
      Description: Resy API Credentials
      SecretString: '{"apiKey":"","authToken":""}'

  # Cognito User Pool
  UserPool:
    Type: AWS::Cognito::UserPool
    Properties:
      UserPoolName: !Sub 'AhuraUsers-${Environment}'
      AutoVerifiedAttributes:
        - email
      UsernameAttributes:
        - email
        - phone_number
      MfaConfiguration: "OFF"
      EmailConfiguration:
        EmailSendingAccount: COGNITO_DEFAULT
      Policies:
        PasswordPolicy:
          MinimumLength: 8
          RequireLowercase: true
          RequireNumbers: true
          RequireSymbols: true
          RequireUppercase: true
      Schema:
        - Name: email
          AttributeDataType: String
          Mutable: true
          Required: true
        - Name: phone_number
          AttributeDataType: String
          Mutable: true
          Required: false

  # Cognito User Pool Client
  UserPoolClient:
    Type: AWS::Cognito::UserPoolClient
    Properties:
      UserPoolId: !Ref UserPool
      ClientName: !Sub 'AhuraApp-${Environment}'
      GenerateSecret: false
      ExplicitAuthFlows:
        - ALLOW_USER_PASSWORD_AUTH
        - ALLOW_REFRESH_TOKEN_AUTH
        - ALLOW_USER_SRP_AUTH

Outputs:
  ApiEndpoint:
    Description: API Gateway endpoint URL
    Value: !Sub 'https://${ResyAPI}.execute-api.${AWS::Region}.amazonaws.com/${Environment}'
  UserPoolId:
    Description: Cognito User Pool ID
    Value: !Ref UserPool
  UserPoolClientId:
    Description: Cognito User Pool Client ID
    Value: !Ref UserPoolClient 